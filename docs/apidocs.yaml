openapi: 3.0.1
info:
  title: E-commerce API
  description: API documentation for user authentication and cart management.
  version: 1.0.0
servers:
  - url: http://161.97.109.65:3000/api
paths:
  /auth/register:
    post:
      tags:
        - Authentication
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstname:
                  type: string
                lastname:
                  type: string
                username:
                  type: string
                email:
                  type: string
                phone:
                  type: string
                password:
                  type: string
                address:
                  type: string
                avatar:
                  type: string
                  default: "/uploads/default_avatar.png"
              required:
                - firstname
                - lastname
                - username
                - email
                - phone
                - password
      responses:
        "201":
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: User created successfully
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                      firstname:
                        type: string
                      lastname:
                        type: string
                      username:
                        type: string
                      email:
                        type: string
                      phone:
                        type: string
                      address:
                        type: string
                      avatar:
                        type: string
                      token:
                        type: string
                  token:
                    type: string
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error

  /auth/login:
    post:
      tags:
        - Authentication
      summary: Login a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Login successful
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                      firstname:
                        type: string
                      lastname:
                        type: string
                      username:
                        type: string
                      email:
                        type: string
                      phone:
                        type: string
                      address:
                        type: string
                      avatar:
                        type: string
                      token:
                        type: string
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error

  /auth/generateToken:
    post:
      tags:
        - Authentication
      summary: Generate a never-expiring token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        "200":
          description: Token generation successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Login successful
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                      firstname:
                        type: string
                      lastname:
                        type: string
                      username:
                        type: string
                      email:
                        type: string
                      phone:
                        type: string
                      address:
                        type: string
                      avatar:
                        type: string
                      token:
                        type: string
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error

  /cart/add:
    post:
      tags:
        - Cart
      summary: Add an item to the cart
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                productId:
                  type: string
              required:
                - productId
      responses:
        "200":
          description: Item added to cart
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Item added to cart
        "500":
          description: Internal Server Error

  /cart/remove/{productId}:
    delete:
      tags:
        - Cart
      summary: Remove an item from the cart
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: productId
          schema:
            type: string
          required: true
      responses:
        "200":
          description: Item removed from cart
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Item removed from cart
        "500":
          description: Internal Server Error

  /cart/update/{productId}:
    put:
      tags:
        - Cart
      summary: Update an item in the cart
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: productId
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quantity:
                  type: integer
              required:
                - quantity
      responses:
        "200":
          description: Cart item updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Cart item updated
        "500":
          description: Internal Server Error

  /cart/view:
    get:
      tags:
        - Cart
      summary: View the cart
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Cart retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    productId:
                      type: string
                    quantity:
                      type: integer
        "500":
          description: Internal Server Error

  /cart/checkout:
    post:
      tags:
        - Cart
      summary: Checkout the cart
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Checkout successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Checkout successful
        "500":
          description: Internal Server Error

  /conversations:
    post:
      tags:
        - Conversations
      summary: Create a new conversation
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                participants:
                  type: array
                  items:
                    type: string
                  example:
                    ["60df599b8e620b3aefae3665", "60df599b8e620b3aefae3666"]
              required:
                - participants
      responses:
        "201":
          description: Conversation created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                  participants:
                    type: array
                    items:
                      type: string
                  lastMessage:
                    type: string
                    example: "No messages yet."
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "One or more participants are not registered users."
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /conversations/{userId}:
    get:
      tags:
        - Conversations
      summary: Get all conversations for a user
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
          description: ID of the user
      responses:
        "200":
          description: Conversations retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    _id:
                      type: string
                    participants:
                      type: array
                      items:
                        type: string
                    lastMessage:
                      type: string
                      example: "Hello!"
                    lastMessageAt:
                      type: string
                      format: date-time
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /interactions:
    get:
      tags:
        - Interactions
      summary: Get all interactions
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Interactions retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  interactions:
                    type: array
                    items:
                      type: object
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /interactions/user/{userId}:
    get:
      tags:
        - Interactions
      summary: Get interactions for a specific user
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
          description: ID of the user
      responses:
        "200":
          description: Interactions retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  interactions:
                    type: array
                    items:
                      type: object
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /interactions/download:
    get:
      tags:
        - Interactions
      summary: Download interactions as JSON
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Interactions downloaded successfully
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /interactions/track:
    post:
      tags:
        - Interactions
      summary: Track user interactions
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                productId:
                  type: string
                interactionType:
                  type: string
                interactionValue:
                  type: number
              required:
                - userId
                - productId
                - interactionType
                - interactionValue
      responses:
        "201":
          description: Interaction tracked successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  interaction:
                    type: object
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /messages:
    post:
      tags:
        - Messages
      summary: Send a message
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                conversationId:
                  type: string
                  description: ID of the conversation
                sender:
                  type: string
                  description: ID of the message sender
                content:
                  type: string
                  description: Content of the message
              required:
                - conversationId
                - sender
                - content
      responses:
        "201":
          description: Message sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                    description: ID of the message
                  conversationId:
                    type: string
                    description: ID of the conversation
                  sender:
                    type: string
                    description: ID of the sender
                  content:
                    type: string
                    description: Content of the message
                  createdAt:
                    type: string
                    format: date-time
                  updatedAt:
                    type: string
                    format: date-time
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /messages/{conversationId}:
    get:
      tags:
        - Messages
      summary: Get messages for a conversation
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: conversationId
          schema:
            type: string
          required: true
          description: ID of the conversation
      responses:
        "200":
          description: Messages retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    _id:
                      type: string
                      description: ID of the message
                    conversationId:
                      type: string
                      description: ID of the conversation
                    sender:
                      type: string
                      description: ID of the sender
                    content:
                      type: string
                      description: Content of the message
                    createdAt:
                      type: string
                      format: date-time
                    updatedAt:
                      type: string
                      format: date-time
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /orders:
    get:
      tags:
        - Orders
      summary: Get all orders
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Successful retrieval of orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Order"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Internal server error

    post:
      tags:
        - Orders
      summary: Create a new order
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Order"
      responses:
        "201":
          description: Order created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
        "400":
          description: Bad request, invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Validation failed, missing required fields
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Internal server error

  /orders/{id}:
    get:
      tags:
        - Orders
      summary: Get order by ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: 60d0fe4f5311236168a109cc
      responses:
        "200":
          description: Successful retrieval of order
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
        "404":
          description: Order not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Order not found
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Internal server error

    put:
      tags:
        - Orders
      summary: Update an order
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: 60d0fe4f5311236168a109cc
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Order"
      responses:
        "200":
          description: Order updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
        "404":
          description: Order not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Order not found
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Internal server error

    delete:
      tags:
        - Orders
      summary: Delete an order
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: 60d0fe4f5311236168a109cc
      responses:
        "200":
          description: Order deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Order deleted successfully
        "404":
          description: Order not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Order not found
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Internal server error
  /products:
    get:
      tags:
        - Products
      summary: Get all products
      responses:
        "200":
          description: Successful retrieval
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Internal server error

    post:
      tags:
        - Products
      summary: Create a new product
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
      responses:
        "201":
          description: Product created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "400":
          description: Bad request, invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Validation failed name is required
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Internal server error

  /products/{id}:
    get:
      tags:
        - Products
      summary: Get product by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: 60d0fe4f5311236168a109cc
      responses:
        "200":
          description: Successful retrieval
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "404":
          description: Product not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Product not found
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Internal server error

    put:
      tags:
        - Products
      summary: Update a product
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: 60d0fe4f5311236168a109cc
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
      responses:
        "200":
          description: Product updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "404":
          description: Product not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Product not found
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Internal server error

    delete:
      tags:
        - Products
      summary: Delete a product
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: 60d0fe4f5311236168a109cc
      responses:
        "200":
          description: Product deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Product deleted successfully
        "404":
          description: Product not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Product not found
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Internal server error
  /users:
    get:
      summary: Get all users
      responses:
        "200":
          description: A list of users
        "500":
          description: Internal Server Error
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserInput"
      responses:
        "201":
          description: Created
        "500":
          description: Internal Server Error

  /users/{id}:
    get:
      summary: Get a user by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
        "404":
          description: User not found
        "500":
          description: Internal Server Error
    put:
      summary: Update a user by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserUpdate"
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
        "404":
          description: User not found
        "500":
          description: Internal Server Error
    delete:
      summary: Delete a user by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
        "404":
          description: User not found
        "500":
          description: Internal Server Error

  /users/{id}/ratings:
    post:
      summary: Add rating and review for a user
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RatingReview"
      responses:
        "201":
          description: Rating and review added successfully
        "400":
          description: Bad request
        "404":
          description: User not found
        "500":
          description: Internal Server Error
    get:
      summary: Get ratings and reviews for a user
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
        "404":
          description: User not found
        "500":
          description: Internal Server Error

  /users/download:
    get:
      summary: Download all users
      responses:
        "200":
          description: JSON file containing all users
        "500":
          description: Internal Server Error

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Order:
      type: object
      required:
        - buyerId
        - sellerId
        - productId
        - totalPrice
        - status
      properties:
        buyerId:
          type: string
          example: 60d0fe4f5311236168a109ca
        sellerId:
          type: string
          example: 60d0fe4f5311236168a109cb
        productId:
          type: string
          example: 60d0fe4f5311236168a109cc
        totalPrice:
          type: number
          format: float
          example: 999.99
        status:
          type: string
          example: Pending
    Product:
      type: object
      required:
        - name
        - description
        - price
        - category
        - sellerId
        - productImage
      properties:
        name:
          type: string
          example: iPhone 12
        description:
          type: string
          example: A powerful phone with great camera capabilities.
        price:
          type: number
          format: float
          example: 999.99
        category:
          type: string
          example: Electronics
        sellerId:
          type: string
          example: 60d0fe4f5311236168a109ca
        productImage:
          type: array
          items:
            type: string
          example:
            - "/uploads/iphone12_front.jpg"
            - "/uploads/iphone12_back.jpg"
